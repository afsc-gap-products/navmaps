% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/planning_calc_survey_days.R
\name{planning_calc_survey_days}
\alias{planning_calc_survey_days}
\title{Estimate the number of days required to complete the survey}
\usage{
planning_calc_survey_days(
  station_nodes,
  max_daily_hr,
  processing_time_hr,
  max_daily_stn,
  transit_speed_kmh,
  set_retrieve_hr,
  set_on_arrival = FALSE
)
}
\arguments{
\item{station_nodes}{A data frame or `sf` object containing survey stations with distances between consecutive stations; output from `planning_solve_station_tsp()`}

\item{max_daily_hr}{Maximum working hours per day.}

\item{processing_time_hr}{Minimum processing time at a station (in hours).}

\item{max_daily_stn}{Maximum number of stations sampled per day.}

\item{transit_speed_kmh}{Transit speed between stations (in kilometers per hour).}

\item{set_retrieve_hr}{Time required to set and retrieve gear (in hours).}

\item{set_on_arrival}{Logical; if `TRUE`, gear is set upon arrival at a station rather than after the minimum processing time.}
}
\value{
The estimated number of days required to complete the survey.
}
\description{
This function calculates the number of days needed to complete a survey, given station distances, vessel transit speeds, and operational constraints (work hours, setting time, sample processing time, approach to setting).
}
\examples{
\dontrun{
# Load and transform survey stations
vessel_dist <- system.file("extdata", "goa_station_allocation_520.shp", package = "navmaps") |> 
sf::st_read() |>
  sf::st_transform(crs = "EPSG:32606") |> # UTM zone 2
  dplyr::filter(VESSEL == 148) # Ocean Explorer

# Solve TSP for station order
tsp_out <- planning_solve_station_tsp(x = vessel_dist)

# Estimate sampling days
survey_days <- planning_calc_survey_days(
  station_nodes = tsp_out$distance_nodes,
  max_daily_hr = 12,
  processing_time_hr = 1.5,
  max_daily_stn = 6,
  transit_speed_kmh = 1.852*7, # Converted from knots to km/h
  set_retrieve_hr = 0.5,
  set_on_arrival = FALSE
)

print(survey_days)
}

}
